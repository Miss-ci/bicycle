{"ast":null,"code":"import \"antd/es/row/style\";\nimport _Row from \"antd/es/row\";\nimport \"antd/es/col/style\";\nimport _Col from \"antd/es/col\";\nvar _jsxFileName = \"/Users/jiantianchi/Desktop/jtc/mybicycle/bicycle/src/components/Header/index.js\";\nimport React from 'react';\nimport Uitl from '../../utils/utils.js';\nimport \"./index.less\";\nimport Api from '../../api';\nexport default class Header extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.getWeatherData = () => {\n      let city = \"杭州\"; // encodeURIComponent对中文进行编码\n\n      Api.jsonp({\n        url: \"http://api.map.baidu.com/telematics/v3/weather?location=\" + encodeURIComponent(city) + \"&output=json&ak=6tYzTvGZSOpYB5Oc2YGGOKt8\"\n      }).then(res => {\n        if (res.status === \"success\") {\n          let data = res.results[0].weather_data[0];\n          this.setState({\n            dayPictureUrl: data.dayPictureUrl,\n            weather: data.weather\n          });\n        }\n      });\n    };\n  }\n\n  componentWillMount() {\n    this.setState({\n      uname: \"河畔一角\"\n    });\n    setInterval(() => {\n      let sysTime = Uitl.formateDate(new Date().getTime());\n      this.setState({\n        sysTime\n      });\n    }, 1000);\n  }\n\n  componentDidMount() {// this.getWeatherData()\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(_Row, {\n      className: \"header-top\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(_Col, {\n      span: 24,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }\n    }, \"\\u6B22\\u8FCE\\uFF0C \", this.state.uname), /*#__PURE__*/React.createElement(\"a\", {\n      href: \"#\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }\n    }, \"\\u9000\\u51FA\"))), /*#__PURE__*/React.createElement(_Row, {\n      className: \"breadcrumb\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(_Col, {\n      span: 4,\n      className: \"breadcrumb-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }\n    }, \"\\u9996\\u9875\"), /*#__PURE__*/React.createElement(_Col, {\n      span: 20,\n      className: \"weather\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"date\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }\n    }, this.state.sysTime), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"weather-image\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: this.state.dayPictureUrl,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"weather-detail\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }\n    }, this.state.weather))));\n  }\n\n}","map":{"version":3,"sources":["/Users/jiantianchi/Desktop/jtc/mybicycle/bicycle/src/components/Header/index.js"],"names":["React","Uitl","Api","Header","Component","getWeatherData","city","jsonp","url","encodeURIComponent","then","res","status","data","results","weather_data","setState","dayPictureUrl","weather","componentWillMount","uname","setInterval","sysTime","formateDate","Date","getTime","componentDidMount","render","state"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAO,cAAP;AACA,OAAOC,GAAP,MAAgB,WAAhB;AACA,eAAe,MAAMC,MAAN,SAAqBH,KAAK,CAACI,SAA3B,CAAqC;AAAA;AAAA;;AAAA,SAgBlDC,cAhBkD,GAgBjC,MAAM;AACrB,UAAIC,IAAI,GAAG,IAAX,CADqB,CAErB;;AACAJ,MAAAA,GAAG,CAACK,KAAJ,CAAU;AACRC,QAAAA,GAAG,EAAE,6DAA6DC,kBAAkB,CAACH,IAAD,CAA/E,GAAwF;AADrF,OAAV,EAEGI,IAFH,CAESC,GAAD,IAAS;AACf,YAAIA,GAAG,CAACC,MAAJ,KAAe,SAAnB,EAA8B;AAC5B,cAAIC,IAAI,GAAGF,GAAG,CAACG,OAAJ,CAAY,CAAZ,EAAeC,YAAf,CAA4B,CAA5B,CAAX;AACA,eAAKC,QAAL,CAAc;AACZC,YAAAA,aAAa,EAAEJ,IAAI,CAACI,aADR;AAEZC,YAAAA,OAAO,EAAEL,IAAI,CAACK;AAFF,WAAd;AAID;AACF,OAVD;AAWD,KA9BiD;AAAA;;AAClDC,EAAAA,kBAAkB,GAAG;AACnB,SAAKH,QAAL,CAAc;AACZI,MAAAA,KAAK,EAAE;AADK,KAAd;AAGAC,IAAAA,WAAW,CAAC,MAAM;AAChB,UAAIC,OAAO,GAAGrB,IAAI,CAACsB,WAAL,CAAiB,IAAIC,IAAJ,GAAWC,OAAX,EAAjB,CAAd;AACA,WAAKT,QAAL,CAAc;AACZM,QAAAA;AADY,OAAd;AAGD,KALU,EAKR,IALQ,CAAX;AAMD;;AACDI,EAAAA,iBAAiB,GAAG,CAClB;AACD;;AAiBDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,IAAI,EAAE,EAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAAW,KAAKC,KAAL,CAAWR,KAAtB,CADF,eAEE;AAAG,MAAA,IAAI,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF,CADF,CADF,eAOE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,IAAI,EAAE,CAAX;AAAc,MAAA,SAAS,EAAC,kBAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AAAK,MAAA,IAAI,EAAE,EAAX;AAAe,MAAA,SAAS,EAAC,SAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAM,MAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAwB,KAAKQ,KAAL,CAAWN,OAAnC,CADF,eAEE;AAAM,MAAA,SAAS,EAAC,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,GAAG,EAAE,KAAKM,KAAL,CAAWX,aAArB;AAAoC,MAAA,GAAG,EAAC,EAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAFF,eAKE;AAAM,MAAA,SAAS,EAAC,gBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkC,KAAKW,KAAL,CAAWV,OAA7C,CALF,CAFF,CAPF,CADF;AAoBD;;AApDiD","sourcesContent":["import React from 'react'\nimport { Row, Col } from \"antd\"\n\nimport Uitl from '../../utils/utils.js'\nimport \"./index.less\"\nimport Api from '../../api'\nexport default class Header extends React.Component {\n  componentWillMount() {\n    this.setState({\n      uname: \"河畔一角\"\n    })\n    setInterval(() => {\n      let sysTime = Uitl.formateDate(new Date().getTime())\n      this.setState({\n        sysTime\n      })\n    }, 1000);\n  }\n  componentDidMount() {\n    // this.getWeatherData()\n  }\n\n  getWeatherData = () => {\n    let city = \"杭州\"\n    // encodeURIComponent对中文进行编码\n    Api.jsonp({\n      url: \"http://api.map.baidu.com/telematics/v3/weather?location=\" + encodeURIComponent(city) + \"&output=json&ak=6tYzTvGZSOpYB5Oc2YGGOKt8\"\n    }).then((res) => {\n      if (res.status === \"success\") {\n        let data = res.results[0].weather_data[0]\n        this.setState({\n          dayPictureUrl: data.dayPictureUrl,\n          weather: data.weather\n        })\n      }\n    })\n  }\n  render() {\n    return (\n      <div className=\"header\">\n        <Row className=\"header-top\">\n          <Col span={24}>\n            <span>欢迎， {this.state.uname}</span>\n            <a href=\"#\">退出</a>\n          </Col>\n        </Row>\n        <Row className=\"breadcrumb\">\n          <Col span={4} className=\"breadcrumb-title\">首页</Col>\n          <Col span={20} className=\"weather\">\n            <span className=\"date\">{this.state.sysTime}</span>\n            <span className=\"weather-image\">\n              <img src={this.state.dayPictureUrl} alt=\"\" />\n            </span>\n            <span className=\"weather-detail\">{this.state.weather}</span>\n          </Col>\n        </Row>\n      </div>\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}